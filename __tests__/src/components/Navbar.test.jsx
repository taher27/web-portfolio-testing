// Test generated by RoostGPT for test testReactJan10 using AI Type Open AI and AI Model gpt-4-1106-preview


import React from 'react';
import { render, fireEvent, screen } from '@testing-library/react';
import '@testing-library/jest-dom/extend-expect';
import Navbar from '../../../src/components/Navbar';

describe('Navbar Component', () => {
  test('renders without crashing', () => {
    render(<Navbar />);
    const navbarElement = screen.getByTestId('navbar');
    expect(navbarElement).toBeInTheDocument();
  });

  test('renders navigation links based on state', () => {
    render(<Navbar />);
    const homeLink = screen.getByText('Home');
    const skillsLink = screen.getByText('Skills');
    const projectsLink = screen.getByText('Projects');
    expect(homeLink).toBeInTheDocument();
    expect(skillsLink).toBeInTheDocument();
    expect(projectsLink).toBeInTheDocument();
  });

  test('toggles drawer on menu button click', () => {
    render(<Navbar />);
    const menuButton = screen.getByTestId('menu-button');
    fireEvent.click(menuButton);
    const drawer = screen.getByTestId('drawer');
    expect(drawer).toHaveClass('drawer-open');

    fireEvent.click(menuButton);
    expect(drawer).not.toHaveClass('drawer-open');
  });

  test('closes drawer on outside click', () => {
    render(<Navbar />);
    const menuButton = screen.getByTestId('menu-button');
    fireEvent.click(menuButton);
    const outsideArea = screen.getByTestId('navbar');
    fireEvent.mouseDown(outsideArea);
    const drawer = screen.getByTestId('drawer');
    expect(drawer).not.toHaveClass('drawer-open');
  });

  test('CV download link points to the correct file', () => {
    render(<Navbar />);
    const downloadLink = screen.getByTestId('download-cv');
    expect(downloadLink.getAttribute('href')).toEqual('pdf/CV-Rieza-Marie-Banquillo.pdf');
  });
});

